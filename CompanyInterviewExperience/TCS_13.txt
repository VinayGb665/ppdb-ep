Given a number N. The task is to write a program to find the N-th term in the below series:
0, 0, 2, 1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14, 7, 16, 8,…..
Examples:
On observing carefully, you will find that the series is a mixture of 2 series:
Now, it is known that every odd positioned term forms an even series starting from 0 and every even positioned term is the half of the previous odd positioned term.
Therefore first check whether the input number N is even or odd. If it is odd, set N=(N/2) + 1(since there are Two series running parallelly) and find the Nth term by using formula 2*(N-1) ( N-1 because the series starts with 0). 
Similarly, if N is even, set N = N/2, use the previous formula and divide the answer by 2.
Below is the implementation of above approach:

Run on IDE
Run on IDE
# Python 3 program to find N-th term
# in the series
# Function to find N-th term
# in the series
def findNthTerm(n):
    # If n is even
    if (n % 2 == 0):
        n = n // 2
        n = 2 * (n – 1)
        print( n // 2)
    # If n is odd
    else:
        n = (n // 2) + 1
        n = 2 * (n – 1)
        print(n)
# Driver code
if __name__ == “__main__”:
    X = 10
    findNthTerm(X);
    X = 7;
    findNthTerm(X)
Run on IDE

