In number theory, a weird number is a natural number that is abundant but not semiperfect. In other words, the sum of the proper divisors (divisors including 1 but not itself) of the number is greater than the number, but no subset of those divisors sums to the number itself. 
Given a number N, the task is to check if the number is weird or not. 
Examples: 

Input: 40
Output: The number is not weird
1+4+5+10+20=40, hence it is not weird. 
Input: 70
Output: The number is Weird
The smallest weird number is 70. Its proper divisors are 1, 2, 5, 7, 10, 14, and 35; these sum to 74, but no subset of these sums to 70. 
The number 12, for example, is abundant but not weird, because the proper divisors of 12 are 1, 2, 3, 4, and 6, which sum to 16; but 2+4+6 = 12. The first few weird numbers are 70, 836, 4030, 5830, 7192, 7912, 9272, 10430, 10570, 10792, 10990, 11410, 11690, 12110, 12530, 12670, 13370, 13510, ..
Approach: Check if the number is abundant or not. The approach has been discussed here. Once the checking has been done check if the number is semiperfect or not. The approach for checking semiperfects numbers has been discussed here. 
Below is the implementation of the above approach:

Run on IDE
Run on IDE
Time Complexity: O(N * number of factors)
Auxiliary Space: O(N * number of factors)
