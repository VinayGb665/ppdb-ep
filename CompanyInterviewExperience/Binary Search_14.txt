Given an array of positive and negative integers and an integer K. The task is to find the subarray which has its sum closest to k. In case of multiple answers, print any one.
Note: Closest here means abs(sum-k) should be minimal. 
Examples:

Input: a[] = { -5, 12, -3, 4, -15, 6, 1 }, K = 2
Output: 1
The subarray {-3, 4} or {1} has sum = 1 which is the closest to K.
Input: a[] = { 2, 2, -1, 5, -3, -2 }, K = 7
Output: 6
Here the output can be 6 or 8
The subarray {2, 2, -1, 5} gives sum as 8 which has abs(8-7) = 1 which is same as that of the subarray {2, -1, 5} which has abs(6-7) = 1.

A naive approach is to check for all possible subarray sum using prefix sum. The complexity in that case will be O(N2).
An efficient solution will be to use C++ STL set and binary search to solve the following problem. Follow the below algorithm to solve the above problem.
Below is the implementation of the above approach.
Run on IDE
Time Complexity: O(N log N)
