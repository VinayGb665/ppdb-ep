Given a obfuscated code that generates the map of India, explain its working.
The following code when executed generates the map of India –
The above code is typical example of obfuscated code i.e. code that is difficult for humans to understand.
How does it work?
Basically, the string is a run-length encoding of the map of India. Alternating characters in the string stores how many times to draw a space, and how many times to draw an exclamation mark consecutively. 
Here is an analysis of the different elements of this program –
The encoded string
Notice [b+++21] at the end of the encoded string. As b+++21 is equivalent to (b++ + 21) which will evaluate to 31 (10 + 21), the first 31 characters of this string are ignored and do not contribute to anything. The remaining encoded string contain instructions for drawing the map. The individual characters determine how many spaces or exclamation marks to draw consecutively.
Outer for loop
This loop goes over the characters in the string. Each iteration increases the value of b by one, and assigns the next character in the string to a.
Inner for loop
This loop draws individual characters, and a newline whenever it reaches the end of line. Consider this putchar statement
As ‘Z’ represents number 90 in ASCII, 90/9 will give us 10 which is a newline character. Decimal 33 is ASCII for ‘!’. Toggling the low-order bit of 33 gives you 32, which is ASCII for a space. This causes ! to be printed if b is odd, and a blank space to be printed if b is even. 
Below is less obfuscated version of above code –
Run on IDE
Run on IDE
Run on IDE
Run on IDE

Reference: http://stackoverflow.com/questions/3533348/how-does-this-code-generate-the-map-of-india
