Write an efficient program to find the sum of contiguous subarray within a one-dimensional array of numbers which has the largest sum. 

Kadane’s Algorithm:
Explanation:
Simple idea of the Kadane’s algorithm is to look for all positive contiguous segments of the array (max_ending_here is used for this).  And keep track of maximum sum contiguous segment  among all positive segments (max_so_far is used for this).  Each time we get a positive sum compare it with max_so_far and update max_so_far if it is greater than max_so_far
Program:

Run on IDE
Run on IDE
Run on IDE
Run on IDE
Run on IDE

Above program can be optimized further, if we compare max_so_far with max_ending_here only if max_ending_here is greater than 0.

Run on IDE
Run on IDE
Time Complexity:        O(n)
Algorithmic Paradigm: Dynamic Programming
Following is another simple implementation suggested by Mohit Kumar. The implementation handles the case when all numbers in array are negative.

Run on IDE
Run on IDE
Run on IDE
Run on IDE

To print the subarray with the maximum sum, we maintain indices whenever we get the maximum sum.

Run on IDE
Run on IDE
Run on IDE
Run on IDE

Now try below question
Given an array of integers (possibly some of the elements negative), write a C program to  find out the *maximum product* possible by multiplying ‘n’ consecutive integers in the array where n <= ARRAY_SIZE. Also print the starting point of maximum product subarray.


References:
 http://en.wikipedia.org/wiki/Kadane%27s_Algorithm
