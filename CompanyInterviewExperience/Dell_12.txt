Given a binary tree, print it vertically. The following example illustrates vertical order traversal.

The idea is to traverse the tree once and get the minimum and maximum horizontal distance with respect to root. For the tree shown above, minimum distance is -2 (for node with value 4) and maximum distance is 3 (For node with value 9).
Once we have maximum and minimum distances from root, we iterate for each vertical line at distance minimum to maximum from root, and for each vertical line traverse the tree and print the nodes which lie on that vertical line.
Algorithm: 
Implementation:
Following is the implementation of above algorithm.
Run on IDE
Run on IDE
Run on IDE

Time Complexity:  Time complexity of above algorithm is O(w*n) where w is width of Binary Tree and n is number of nodes in Binary Tree.  In worst case, the value of w can be O(n) (consider a complete tree for example) and time complexity can become O(n2).  
This problem can be solved more efficiently using the technique discussed in this post.  We will soon be discussing complete algorithm and implementation of more efficient method.
