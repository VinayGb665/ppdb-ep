Given a list of contacts containing username, email and phone number in any order. Identify the same contacts (i.e., same person having many different contacts) and output the same contacts together. 
Notes:
1) A contact can store its three fields in any order, i.e., phone number can appear before username or username can appear before phone number.
2) Two contacts are same if they have either same username or email or phone number.   
Example: 
We strongly recommend you to minimize your browser and try this yourself first.
Input is basically an array of structures.  A structure contains three fields such that any field can represent any detail about a contact.
The idea is to first create a graph of contacts using given array.  In the graph, there is an edge between vertex i to vertex j if they both have either same username or same email or same phone number.   Once the graph is constructed, the task reduces to finding connected components in an undirected graph.  We can find connected components either by doing DFS or BFS starting from every unvisited vertex.  In below code, DFS is used.
Below is C++ implementation of this idea.
Run on IDE
Output: 
Time complexity: O(n2) where n is number of contacts.
Thanks to Gaurav Ahirwar for above solution.
