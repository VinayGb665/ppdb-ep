Given K sorted linked lists of size N each, merge them and print the sorted output.
Example: 
 

 

 

We already know that merging of two linked lists can be done in O(n) time and O(1) space (For arrays O(n) space is required). The idea is to pair up K lists and merge each pair in linear time using O(1) space. After first cycle, K/2 lists are left each of size 2*N. After second cycle, K/4 lists are left each of size 4*N and so on. We repeat the procedure until we have only one list left.  
Below is C++ implementation of the above idea.
Run on IDE
Output : 
Time Complexity of above algorithm is O(nk logk) as outer while loop in function mergeKLists() runs log k times and every time we are processing nk elements.  
Merge k sorted linked lists | Set 2 (Using Min Heap)
