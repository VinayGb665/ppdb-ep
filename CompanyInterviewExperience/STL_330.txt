
Vectors are same as dynamic arrays with the ability to resize itself automatically when an element is inserted or deleted, with their storage being handled automatically by the container.
This operator is used to assign new contents to the container by replacing the existing contents.
It also modifies the size according to the new contents.
Syntax :
Examples:
Errors and Exceptions
1. If the containers are of different types, an error is thrown.
2. It has a basic no exception throw guarantee otherwise.
Run on IDE
Output:
This operator is used to reference the element present at position given inside the operator. It is similar to the at() function, the only difference is that the at() function throws an out-of-range exception when the position is not in the bounds of the size of vector, while this operator causes undefined behaviour.
Syntax :
Examples:
Errors and Exceptions
1. If the position is not present in the vector, it shows undefined behaviour.
2. It has a no exception throw guarantee otherwise.
Run on IDE
Output:
Application
Given a vector of integers, print all the integers present at odd positions.
Algorithm
1. Run a loop till  the size of the vector.
2. Check if the position is not divisible by 2, then print the element at that position.
Run on IDE
Output:
